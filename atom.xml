<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-02-08T10:00:28.595Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>zTheGang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>debug记录</title>
    <link href="http://example.com/2023/02/08/debug%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2023/02/08/debug%E8%AE%B0%E5%BD%95/</id>
    <published>2023-02-08T09:40:25.771Z</published>
    <updated>2023-02-08T10:00:28.595Z</updated>
    
    <content type="html"><![CDATA[<h3 id="vue路由ESLint有种错误-Unable-to-resolve-path-to-module"><a href="#vue路由ESLint有种错误-Unable-to-resolve-path-to-module" class="headerlink" title="vue路由ESLint有种错误 Unable to resolve path to module"></a><a href="https://blog.csdn.net/qq_29712303/article/details/118342045">vue路由ESLint有种错误 Unable to resolve path to module</a></h3><blockquote><p>起因：刚开始创建目录的时候位置创建错误，把ddd.vue文件写在其他目录里。即实际的文件和这里的地址不匹配。然后保存编辑，（这时 ESLint 工作了，记录下文件的代码和错误；【我猜的，我不懂ESLint】）。<br>后面我发现文件不对，文件移动到正确目录后还是持续报错，很懵逼，纳闷。<br>后来，将上述代码片段剪切到其他位置后，就不报错了。【切换代码行位置】</p></blockquote><hr><h3 id="elementui动态table表格抖动，表格样式错乱"><a href="#elementui动态table表格抖动，表格样式错乱" class="headerlink" title="elementui动态table表格抖动，表格样式错乱"></a><a href="https://blog.csdn.net/Sunny_lxm/article/details/125186907">elementui动态table表格抖动，表格样式错乱</a></h3><blockquote><p>监视属性发生改变或者数据加载完，触发beforeUpdate生命周期函数，使得列的key发生改变（因为全都是随机数，全部发生改变），key发生改变表格重新渲染表格，可以解决问题二中加随机数造成的表格抖动的问题</p></blockquote><hr><h3 id="MAVEN依赖jar版本下载错误：xxx-pom-part-lock-文件名、目录名或卷标语法不正确。"><a href="#MAVEN依赖jar版本下载错误：xxx-pom-part-lock-文件名、目录名或卷标语法不正确。" class="headerlink" title="MAVEN依赖jar版本下载错误：xxx.pom.part.lock (文件名、目录名或卷标语法不正确。)"></a><a href="https://blog.csdn.net/nakey_xie/article/details/123280939">MAVEN依赖jar版本下载错误：xxx.pom.part.lock (文件名、目录名或卷标语法不正确。)</a></h3><blockquote><p>找到问题的根本原因是我定义版本的时候多了一个&gt; 号<br>解决方案：把多出的符号&gt;去掉即可。</p></blockquote><hr><h3 id="错误Invalid-bound-statement-not-found-xxx问题解决办法"><a href="#错误Invalid-bound-statement-not-found-xxx问题解决办法" class="headerlink" title="错误Invalid bound statement(not found):xxx问题解决办法"></a><a href="https://zhaoguangxiao.blog.csdn.net/article/details/90783416">错误Invalid bound statement(not found):xxx问题解决办法</a></h3><blockquote><p>错误分析:<br>teget目录下面的userDao.xml文件应该放在userDao.class下面<br>解决办法如下<br>由于在resources下面不能创建package,只能创建文件夹Directory,重点(文件夹里面不能以”.”的形式)</p></blockquote><hr><h3 id="记录-dynamic-datasource-Please-check-the-setting-of-primary…【解决方案】"><a href="#记录-dynamic-datasource-Please-check-the-setting-of-primary…【解决方案】" class="headerlink" title="记录:dynamic-datasource Please check the setting of primary…【解决方案】"></a><a href="https://luoyong.blog.csdn.net/article/details/121633702">记录:dynamic-datasource Please check the setting of primary…【解决方案】</a></h3><blockquote><p>1、针对猜测1：设置默认库。具体设置可参考如下，或者查阅mybatis-plus官方文档。<br>设置一下primary属性，一般给的都是主库(使用频率最大)，而名称即与下方的数据源一致<br>2、针对猜测2：直接升级dynamic-datasource-spring-boot-starter 的版本。<br>推荐组合版本使用：<br>springboot 2.3.1.RELEASE + dynamic-datasource-spring-boot-starter 3.5.0<br>注：bug菌亲测将dynamic-datasource-spring-boot-starter版本升级就解决了此启动问题。亲测该组版本是兼容的，不存在上述项目无法启动问题，大家可以放心使用。</p></blockquote><hr><h3 id="配置多数据源出现dynamic-datasource-Please-check-the-setting-of-primary"><a href="#配置多数据源出现dynamic-datasource-Please-check-the-setting-of-primary" class="headerlink" title="配置多数据源出现dynamic-datasource Please check the setting of primary"></a><a href="https://blog.csdn.net/qq_36963762/article/details/107809290">配置多数据源出现dynamic-datasource Please check the setting of primary</a></h3><hr><h3 id="Optional-long-parameter-‘id’-is-present-but-cannot-be-translated-into-a-null-value-due-to-being-…"><a href="#Optional-long-parameter-‘id’-is-present-but-cannot-be-translated-into-a-null-value-due-to-being-…" class="headerlink" title="Optional long parameter ‘id’ is present but cannot be translated into a null value due to being …"></a><a href="https://blog.csdn.net/we_hope/article/details/80433972">Optional long parameter ‘id’ is present but cannot be translated into a null value due to being …</a></h3><blockquote><p>大意是说 如果参数是非必须的，则会赋值为null，因此参数应该是一个object，它才能接受这个null值。<br>而上面代码参数id 的类型 为 long，它接受不了null值。<br>解决办法：<br>将long类型换成对象类型Long，问题解决。</p></blockquote><hr><h3 id="Mysql中关键字需要引号引起来"><a href="#Mysql中关键字需要引号引起来" class="headerlink" title="Mysql中关键字需要引号引起来"></a><a href="https://blog.csdn.net/u012768459/article/details/52850795">Mysql中关键字需要引号引起来</a></h3><blockquote><p>解决方案<br>1：有些字是关键字需要引号引起来，(在英文状态下，点1左边的按键)<br>2：或者字段前带上表名也是安全的！</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;vue路由ESLint有种错误-Unable-to-resolve-path-to-module&quot;&gt;&lt;a href=&quot;#vue路由ESLint有种错误-Unable-to-resolve-path-to-module&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    <category term="其他" scheme="http://example.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>前端技术网摘</title>
    <link href="http://example.com/2023/02/08/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E7%BD%91%E6%91%98/"/>
    <id>http://example.com/2023/02/08/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E7%BD%91%E6%91%98/</id>
    <published>2023-02-08T09:20:24.984Z</published>
    <updated>2023-02-08T10:00:37.886Z</updated>
    
    <content type="html"><![CDATA[<h3 id="VUE——nextTick"><a href="#VUE——nextTick" class="headerlink" title="VUE——nextTick"></a><a href="https://segmentfault.com/q/1010000018918929">VUE——nextTick</a></h3><blockquote><p>你可能对nextTick有什么误解，nextTick是下一个eventLoop里面的一个待执行的钩子函数。<br>vue数据驱动视图更新的逻辑是：data变化 –&gt; nextTick触发 –&gt; 更新vdom –&gt; 新旧vdom对比 –&gt; 生成dom更新视图。<br>js单线程的原因，nextTick里面写的代码会在生成dom这步后面执行，所以一般在这里拿最新的dom，这也是nextTick的应用场景，它的其它场景没见过。<br>然后：vue的data赋值是一个同步的过程，nextTick函数在data的值变化后的某个时间触发。同步过程的前后两个点，原则上是不需要知道的，因为没有意义。<br>最后：至于你要看数据的变化前后，可以watch selected，新旧值都会给你<br>补充：再次审题了一下，你把点击事件绑定在option上，在选择的时候，肯定是先触发事件，再selected赋值，你再去看看 这个select组件的用法，你用错了。-_-</p></blockquote><hr><h3 id="Js自带方法-eval-将字符串当作代码输出"><a href="#Js自带方法-eval-将字符串当作代码输出" class="headerlink" title="Js自带方法 eval() 将字符串当作代码输出"></a><a href="https://www.cnblogs.com/fqh123/p/11302663.html">Js自带方法 eval() 将字符串当作代码输出</a></h3><blockquote><p>eval()可以动态解析和执行字符串，它直接把字符串当做Javascript代码执行，eval函数接收一个参数str，如果str不是字符串，则直接返回str，否则执行str语句。如果str语句执行结果是一个值，则返回此值，否则返回undefined。</p></blockquote><hr><h3 id="JS逻辑判断"><a href="#JS逻辑判断" class="headerlink" title="JS逻辑判断"></a><a href="https://www.jb51.net/article/88781.htm">JS逻辑判断</a></h3><blockquote><p>1、只要“||”前面为false,不管“||”后面是true还是false，都返回“||”后面的值。<br>2、只要“||”前面为true,不管“||”后面是true还是false，都返回“||”前面的值。</p></blockquote><hr><h3 id="pointer-events"><a href="#pointer-events" class="headerlink" title="pointer-events"></a><a href="https://blog.csdn.net/qq_35432904/article/details/103896123">pointer-events</a></h3><blockquote><p>1、pointer-events 更像是JavaScript，它能够：<br>阻止用户的点击动作产生任何效果<br>阻止缺省鼠标指针的显示<br>阻止CSS里的 hover 和 active 状态的变化触发事件<br>阻止JavaScript点击动作触发的事件<br>通过其他方式绑定的事件还是会触发的，比如键盘事件等。</p></blockquote><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;VUE——nextTick&quot;&gt;&lt;a href=&quot;#VUE——nextTick&quot; class=&quot;headerlink&quot; title=&quot;VUE——nextTick&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://segmentfault.com/q/10100000189</summary>
      
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>JAVA网摘</title>
    <link href="http://example.com/2023/02/08/java%E7%BD%91%E6%91%98/"/>
    <id>http://example.com/2023/02/08/java%E7%BD%91%E6%91%98/</id>
    <published>2023-02-08T06:56:30.134Z</published>
    <updated>2023-02-08T09:43:15.972Z</updated>
    
    <content type="html"><![CDATA[<h3 id="IDEA开启热加载快捷开发"><a href="#IDEA开启热加载快捷开发" class="headerlink" title="IDEA开启热加载快捷开发"></a><a href="https://blog.51cto.com/u_15310381/3200103">IDEA开启热加载快捷开发</a></h3><p>通过开启热加载，可以在不重启服务的情况下应用已修改的JAVA类。</p><blockquote><p>热部署:就是容器状态在运行的情况下部署或者重新部署整个项目.在这种情况下一般整个内存会清空,重新加载.简单来说就是Tomcat或者其他的web服务器会帮我们重新加载项目.这种方式可能会造成sessin丢失等情况.<br>热加载:就是容器状态在运行的情况下重新加载改变编译后的类.在这种情况下内存不会清空,sessin不会丢失,但容易造成内存溢出,或者找不到方法。因为内存无法转变成对像. 一般改变类的结构和模型就会有异常，在已经有的变量和方法中改变是不会出问题的。在中模式最好是在调试过程中使用，免得整个项目加载.</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;IDEA开启热加载快捷开发&quot;&gt;&lt;a href=&quot;#IDEA开启热加载快捷开发&quot; class=&quot;headerlink&quot; title=&quot;IDEA开启热加载快捷开发&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://blog.51cto.com/u_15310381/3200</summary>
      
    
    
    
    <category term="JAVA" scheme="http://example.com/categories/JAVA/"/>
    
    
  </entry>
  
</feed>
